'use client';

import React, { useState } from 'react';
import styles from './ReferralCalculator.module.css';
import InfoBlock from '@/componets/pages/info-block/InfoBlock';
import Button from '@/componets/pages/button/Button';

const ReferralCalculator: React.FC = () => {
    const [referrals, setReferrals] = useState<number>(1);
    const [exchangeAmount, setExchangeAmount] = useState<number>(2300);

    const getCommissionRate = (count: number): number => {
        if (count >= 150) return 2.5;
        if (count >= 130) return 2.4;
        if (count >= 110) return 2.3;
        if (count >= 90) return 2.2;
        if (count >= 70) return 2.1;
        if (count >= 50) return 2.0;
        if (count >= 40) return 1.8;
        if (count >= 30) return 1.6;
        if (count >= 20) return 1.4;
        if (count >= 10) return 1.2;
        return 1.0;
    };

    const commissionRate = getCommissionRate(referrals);
    const earnings = ((exchangeAmount * commissionRate) / 100) * referrals;

    return (
        <>
            <h1 style={{ textAlign: 'center', marginBottom: '5rem' }}>
                –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ <span>BtcBank24</span>
            </h1>
            <InfoBlock >
                <p className="infoText">
                    –í —ç–ø–æ—Ö—É —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –∏–ª–ª—é–∑–∏–π –∫–∞–∂–¥—ã–π –æ—Ö–æ—Ç–Ω–∏–∫ –∂–∞–∂–¥–µ—Ç –Ω–∞–∂–∏–≤—ã. –¢—ã ‚Äî –æ—Ö–æ—Ç–Ω–∏–∫, –∏ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –∑–∞–π—Ç–∏ –≤{' '}
                    <a href="https://t.me/Btcbank24com_v2_bot?start=srcWebsiteRef" target="_blank" rel="noopener noreferrer">
                        —É–∫—Ä–æ–º–Ω–æ–µ –º–µ—Å—Ç–æ
                    </a>, –≤—ã–±—Ä–∞—Ç—å —Ç–∞–º <strong>üë§–ü—Ä–æ—Ñ–∏–ª—å</strong>, –∑–∞—Ç–µ–º —Ä–∞–∑–¥–µ–ª <strong>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</strong> –∏
                    —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ—é —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω–Ω–∏–∫–æ–≤.
                </p>
                <br />
                <p className="infoText">
                    –¢–µ–ø–µ—Ä—å, –∫–æ–≥–¥–∞ —É —Ç–µ–±—è –µ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞, –∏—Å–ø–æ–ª—å–∑—É–π –µ—ë —Å —É–º–æ–º. –ü–æ–¥–µ–ª–∏—Å—å –µ—é —Å –¥—Ä—É–∑—å—è–º–∏,
                    —Ä–∞–∑–º–µ—Å—Ç–∏ –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö –∏–ª–∏ –Ω–∞ —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–æ—Ä—É–º–∞—Ö, –≥–¥–µ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –∏—Å–∫–∞—Ç–µ–ª–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π.
                    –ö–∞–∂–¥—ã–π –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã–π —Ç–æ–±–æ–π —á–µ–ª–æ–≤–µ–∫ ‚Äî —ç—Ç–æ —à–∞–≥ –∫ –Ω–æ–≤—ã–º –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–º, –≤–µ–¥—å –∑–∞ –∫–∞–∂–¥—É—é —Å–¥–µ–ª–∫—É —Ä–µ—Ñ–µ—Ä–∞–ª–∞
                    —Ç—ã –ø–æ–ª—É—á–∏—à—å –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –µ–≥–æ –æ–±–º–µ–Ω–æ–≤.
                </p>
                <br />
                <p className="infoText">
                    –ß–µ–º –±–æ–ª—å—à–µ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ ‚Äî —Ç–µ–º –≤—ã—à–µ —Ç–≤–æ–∏ –Ω–∞–≥—Ä–∞–¥—ã. –°–ª–µ–¥–∏ –∑–∞ –∏—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é –≤ —Ä–∞–∑–¥–µ–ª–µ
                    <strong>üë§–ü—Ä–æ—Ñ–∏–ª—å</strong> &rarr; <strong>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</strong>, —á—Ç–æ–±—ã –ø–æ–Ω–∏–º–∞—Ç—å,
                    –Ω–∞—Å–∫–æ–ª—å–∫–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–≤–æ—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è. –ü–æ–º–Ω–∏, —á—Ç–æ –≤ —ç—Ç–æ–º –º–∏—Ä–µ –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç
                    —Ç–æ—Ç, –∫—Ç–æ –º—ã—Å–ª–∏—Ç –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ –∏ –¥–µ–π—Å—Ç–≤—É–µ—Ç —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ.
                </p>
            </InfoBlock>

            <div className={styles.calculatorContainer}>
                <h2 className={styles.title}>–†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ —Å–≤–æ–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫</h2>
                <div className={styles.sliderContainer}>
                    <label className={styles.label}>
                        –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:{' '}
                        <span className={styles.earningsHighlight}>{referrals}</span>
                    </label>
                    <input
                        type="range"
                        min="0"
                        max="200"
                        value={referrals}
                        onChange={(e) => setReferrals(Number(e.target.value))}
                        className={styles.slider}
                        list="tickmarks"
                    />
                    <datalist id="tickmarks">
                        <option value="0" label="0"></option>
                        <option value="25" label="25"></option>
                        <option value="50" label="50"></option>
                        <option value="75" label="75"></option>
                        <option value="100" label="100"></option>
                        <option value="125" label="125"></option>
                        <option value="150" label="150"></option>
                        <option value="175" label="175"></option>
                        <option value="200" label="200"></option>
                    </datalist>
                </div>
                <div className={styles.sliderContainer}>
                    <label className={styles.label}>
                        –°—É–º–º–∞ –æ–±–º–µ–Ω–∞:{' '}
                        <span className={styles.earningsHighlight}>{exchangeAmount}</span> RUB
                    </label>
                    <input
                        type="range"
                        min="2300"
                        max="100000"
                        step="100"
                        value={exchangeAmount}
                        onChange={(e) => setExchangeAmount(Number(e.target.value))}
                        className={styles.slider}
                    />
                </div>
                <div className={styles.resultContainer}>
                    <h3 className={styles.resultText}>
                        –í–∞—à –∑–∞—Ä–∞–±–æ—Ç–æ–∫:{' '}
                        <span className={styles.earningsHighlight}>{earnings.toFixed(2)}</span> RUB
                    </h3>
                    <p className={styles.percentageText}>
                        –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞:{' '}
                        <span className={styles.earningsHighlight}>{commissionRate}%</span>
                    </p>
                </div>
                <Button
                    size="large"
                    variant="primary"
                    onClick={() => {
                        setReferrals(0);
                        setExchangeAmount(2300);
                    }}
                >
                    –°–±—Ä–æ—Å–∏—Ç—å
                </Button>
            </div>
        </>
    );
};

export default ReferralCalculator;
